record for a Spring project.

1.web.xml
location : src/main/webapp/WEB-INF/web.xml
there are many things that web.xml done:
1.1 display-name
1.2 session-config
1.3 welcome-file-list
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

1.4 error-page : 404 , 500
1.5 mime-mapping : docx , pptx , xlsx
1.6 listener : org.xxx.commons.web.SessionListener
		implements javax.servlet.http.HttpSessionAttributeListener
		overrided: 	attributeAdded
				attributeRemoved
				attributeReplaced
####		question #1 : why we implement it ?		####
####		answer 	:	Interceptor : org.xxx.commons.web.LoginInterceptor

--load spring : 
context-param
	param-name : contextConfigLocation
	param-value: classpath:springcfg/applicationContext.xml			--> 2.springcfg/applicationContext.xml

--listener : org.springframework.web.context.ContextLoaderListener
	     org.springframework.web.util.IntrospectorCleanupListener

--filter : encodingFilter
	   struts2

--tiles
context-param
	param-name : org.apache.tiles.factory.TilesContainerFactory
	param-value: org.xxx.commons.web.ClassPathStrutsTilesContainerFactory
context-param
	param-name : tilesConfigLocation
	param-value: /tiles/tiles-main.xml,
		     /tiles/tiles-ticket.xml,
		     /tiles/tiles-system.xml,
		     /tiles/tiles-history.xml

listener : org.apache.struts2.tiles.StrutsTilesListener

----------------------------------------------------------------------------------------------------
2.springcfg/applicationContext.xml
2.1 load config file:
	bean class : org.springframework.beans.factory.config.PropertyPlaceholderConfigurer
	property name : locations
	value : classpath:springcfg/dataSource.properties
######## question #3 : what's 'xe' ?
######## springcfg/dataSource.properties note: 
######## when use sqlplus to login oracle , we use 'sqlplus username/password@xxx.xxx.xxx.xx:port'
######## but in dataSource.properties , we use jdbcURL 'jdbc:oracle:thin:@xxx.xxx.xxx.xxx:port:xe'
######## xe is 'table_space' . 
######## but we can't find xe (table_space) from sql "select distinct TABLESPACE_NAME from tabs;"
######## and the count are 2 : "select count(distinct TABLESPACE_NAME) from tabs;"


2.2 config data source
driverClass : oracle.jdbc.driver.OracleDriver
jdbcUrl : value from springcfg/dataSource.properties
user : value from springcfg/dataSource.properties
password : value from springcfg/datasource.properties
maxPoolSize
minPoolSize
initialPoolSize
maxIdleTime
idleConnectionTestPeriod
maxStatement
checkoutTimeout

2.3 transaction
bean 	id : tx Manager
	class : org.springframework.jdbc.datasource.DataSourceTransactionManager
	property name : dataSource
		 ref  : datSource
tx:advice
	id	:	txAdvice
	transaction-manager = txManager
	tx:attribute
		tx:method : 	find*
				has*
				add*
				alter*
				del*
######## question #4 : what's advice mean ?

aop:config
	aop:pointcut 	id=serviceOperation
			expression=execution(public * org.xxx..service.*.*(...))
######## question #5 :  what's pointcut mean?

		 	what's expression=excution(public * org.xxx..service.*.*(..))	mean ?
	apo:advisor 	advice-ref=txAdvice
			pointcut-ref=seviceOperation
######## question #6 :  what's txAdvice ?

2.4 inport other Spring files: 	(all in the same folder)
	import resource spring-commons.xml
			spring-action.xml
			spring-service.xml
			spring-dao.xml
			spring-mail-client.xml

----------------------------------------------------------------------------------------------------
3. src/main/resources/springcfg/spring-commons.xml

3.1 mailValidate

3.2 ldapSearch

3.3 loginInterceptor

3.4 powerInterceptor

3.5 fileUploadInterceptor

3.6 taskExecutor

3.7 mailSender

3.8 mailUtil

----------------------------------------------------------------------------------------------------
4.src/main/resources/springcfg/spring-action.xml

4.1 mainAction

4.2 ticketAction

4.3 systemAction

4.4 historyAction

----------------------------------------------------------------------------------------------------
5.src/main/resources/springcfg/spring-service.xml

5.1 laneService

5.2 projectService

5.3 sampleService

5.4 subProjectService

5.5 ticketService

5.6 userService

5.7 propertyService

----------------------------------------------------------------------------------------------------
6.src/main/resources/springcfg/spring-dao.xml

6.1 laneDao

6.2 projectDao

6.3 sampleDao

6.4 subProjectDao

6.5 ticketDao

6.6 userDao

6.7 propertyDao

----------------------------------------------------------------------------------------------------
7.src/main/resources/springcfg/spring-mail-client.xml

7.1 import classpath:META-INF/cxf/cxf.xml
    import classpath:META-INF/cxf/cxf-extension-soap.xml
    import classpath:META-INF/cxf/cxf-servlet.xml

    jaxws:client id=mailAction
		 serviceClass=org.xxx.mail.action.MailAction
		 address="http://xxx.xxx.xx.xxx/Dlywebservice1.0.0.2/ticket?wsdl"

----------------------------------------------------------------------------------------------------
8. src/main/resources/struts.xml
   struts-2.0.dtd
	constant :	struts.ognl.allowStaticMethodAccess 	true
			struts.i18n.encoding	utf-8
			objectFactory 	spring
			struts.multipart.saveDir		/tmp
			struts.multipart.maxSize		104857600
			struts.configuration.xml.reload		false
			struts.devMode				false
			struts.serve.static.browserCache	true

	package	:	name=default
			extends=json-default,tiles-default
			abstract=true

		interceptors	:
			interceptor	name=loginInterceptor
					class=loginInterceptor
				param	name=excludeMethods
						login,check
			interceptor	name=powerInterceptor 	class=powerInterceptor
				param	name=nameSpace
						/ticket,/system,/history
			interceptor	name=fileUploadInterceptor	class=fileUploadInterceptor
			interceptor-stack	name=xxxDefaultStack
				interceptor-ref	loginInterceptor
						powerInterceptor
						fileUploadInterceptor
						defaultStack

		globle-results
			result name=json 	type=json
			result name=checkFile	type=json
			result name=tiles	type=tiles
			result name=login	type=redirectAction
			result name=error	type=redirect
			result name=404		type=redirect	

		global-exception-mapping
			exception-mapping exception=java.lang.NoSuchMethodException result=404
			exception-mapping exception=java.lang.Exception retusl=error

	--root
	package	:	name=main
			extends=default
		action name=*	class=mainAction	method={1}	
			result ${targetUrl}

	--ticket
	package	:	name=ticket
			extends=default
			namespace=/ticket
		action name=*	class=ticketAction	method={1}
			result ${targetUrl}
			result 	name=list
				type=redirectAction
				param name=list	type=redirectaction
					param name=actionname
						list
			result	name=stream	type=stream
				param name=list	type=stream
					param name=contentType
						${accessoryContentType}
					param name=inputName
						inputStream
					param name=contentDisposition
						attachment;filename=${accessoryFileName}
					param name=bufferSize
						1024
	--system
	package	:	name=system
			extends=default
			namespace="/system"
		action name="*"	class=systemAction	method={1}
			${targetUrl}

	--history
	package	:	name=history 	
			extends=default	
			namespace=/history
		action name="*" class=historyAction	method={1}
			${targetUrl}
			
----------------------------------------------------------------------------------------------------
9.tiles
src/main/resources/tiles/tiles-main.xml,
src/main/resources/tiles/tiles-ticket.xml,
src/main/resources/tiles/tiles-system.xml,
src/main/resources/tiles/tiles-history.xml

------------------------------------------
Data Operation
------------------------------------------
1. the configuration.
	spring-service.xml
		<bean id="userService" class="org.xxx.egd.service.impl.UserServiceImpl">
			<property name="userDao" ref="userDao" />
			<property name="mailValidate" ref="mailValidate" />
		</bean>

	spring-dao.xml
		<bean id="userDao" class="org.xxx.egd.dao.impl.UserDaoImpl">
			<property name="dateSource" ref="dataSource" />
		</bean>
	spring-commons.xml
		<bean id="mailValidate" class="org.xxx.commons.MailValidate">
			<property name="ldapUrl" Value="ldap://xxx.xxx.xxx.xxx:xxx" />
		</bean>

2. Table.
TNAME											   TABTYPE		  CLUSTERID
------------------------------------------------------------------------------------------ --------------------- ----------
LOG_DATAIMPORT										   TABLE
RECORD_PROJECT										   TABLE
RECORD_SUBPROJECT									   TABLE
R_ROLE_RESOURCE 									   TABLE
R_TICKET_SAMPLE 									   TABLE
R_TICKET_SUBPROJECT									   TABLE
T_COMMENT										   TABLE
T_LANE											   TABLE
T_PRODUCTLINE										   TABLE
T_PROJECT										   TABLE
T_PROPERTY										   TABLE

TNAME											   TABTYPE		  CLUSTERID
------------------------------------------------------------------------------------------ --------------------- ----------
T_RESOURCE										   TABLE
T_ROLE											   TABLE
T_SAMPLE										   TABLE
T_SUBPROJECT										   TABLE
T_TICKET										   TABLE
T_TICKETDATA										   TABLE
T_USER											   TABLE
T_WORKFLOWTYPE										   TABLE
(well, the max columns are 133. )

----------------------------------------------------------------------------------------------------
3. The Login process.

3.1 validate user by email from T_USER 

	select * from T_USER where 1=1 and user_mail like ?

3.2  get role's resource from ROLE_RESOURCE & R_ROLE_RESOURCE

	select SRC.* , ROLE_RESOURCE.ROLE_ID 
	from R_ROLE_RESOURCE ROLE_RESOURCE 
	left join T_RESOURCE SRC 
	on SRC.RESOURCE_ID = ROLE_RESOURCE.RESOURCE_ID
	where 1=1
	and ROLE_ID = ?
	order by SRC.RESOURCE_INDEX


----------------------------------------------------------------------------------------------------
4. dev note.
4.1 svn:ignore 
	.settings/
	.classpath
	.project

4.2 add datasource.
	dataSource.properties
		change the dataSource's username
		add another dataSource
	applicationContext.xml
		add 	another dataSource
			txOlManager	
			txOlAdvice
			olServiceOperation
	import resource:
		spring-xxx-dao.xml
		spring-xxx-service.xml

4.3 add a field and display it.
	1.domain
	2.dao
	3.service
	4.adction
	5.jsp
		

----------------------------------------------------------------------------------------------------
5.css note
5.1 Therr types of css:
	A{}	<A>
	#A{}	<div id=a> 
	.A{}	<div class=A>



